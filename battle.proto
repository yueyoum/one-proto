package Sanguo.protocol.battle;

import "world.proto";

message HangNotify {
    message HangInfo {
        required int32 stage_id = 1;
        required int32 whole_hours = 2;
        required int32 start_time = 3;      // UTC 秒
        required bool finished = 4;         
    }

    required bytes session = 1;
    required int32 hours = 2;       // 当天剩余小时数
    
    optional HangInfo hang = 3;
}


message Stage {
    required int32 id = 1;
    required bool star = 2;
}

message AlreadyStageNotify {
    required bytes session = 1;
    repeated Stage stages = 2;
}

message CurrentStageNotify {
    required bytes session = 1;
    required Stage stage = 2;
}

message NewStageNotify {
    required bytes session = 1;
    required Stage stage = 2;
}


message BattleHero {
    enum HeroType {
        HERO = 1;
        MONSTER = 2;
        }

    required int32 id = 1;
    required int32 original_id = 2;
    required int32 hp = 3;
    required HeroType ht = 4;       // 是玩家的英雄还是关卡的怪物
}



message Action {
    message SkillTarget {
        required int32 target_id = 1;
        required bool is_crit = 2;
        required bool is_dodge = 3;
    }

    message HeroNotify {
        required int32 target_id = 1;
        required int32 hp = 2;
        optional int32 eff = 3;
        repeated int32 buffs = 4;
        optional int32 value = 5;
    }


    required int32 from_id = 1;             // 发起行动的英雄ID
    optional int32 skill_id = 2;
    repeated SkillTarget skill_targets = 3;
    repeated HeroNotify hero_notify = 4;

    repeated Action passiveaction = 5;
}


message Ground {
    // 一军
    repeated BattleHero self_heros = 1;     //
    repeated BattleHero rival_heros = 2;    //
    required bool self_win = 3;             //

    repeated Action actions = 4;            // 每次行动
}

message Battle {
    required int32 self_power = 1;          // 已方总战力
    required int32 rival_power = 2;         // 对方总战力
    required string self_name = 3;
    required string rival_name = 4;
    required Ground first_ground = 5;       // 前军
    required Ground second_ground = 6;      // 中军
    required Ground third_ground = 7;       // 后军
    required bool self_win = 8;             // 自己是否胜利
}


message PVERequest {
    required bytes session = 1;
    required int32 stage_id = 2;
}

message PVEResponse {
    required int32 ret = 1;
    required bytes session = 2;
    required int32 stage_id = 3;
    required Battle battle = 4;
    required Sanguo.protocol.world.Drop drop = 5;
}



message HangRequest {
    required bytes session = 1;
    required int32 stage_id = 2;
    required int32 hours = 3;
}

message HangResponse {
    required int32 ret = 1;
    required bytes session = 2;
}

message HangCancelRequest {
    required bytes session = 1;
}

message HangCancelResponse {
    required int32 ret = 1;
    required bytes session = 2;
}

